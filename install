#!/bin/bash

# unminimize the codespace
# (mild hack; unminimize requires 2 user confirmations, no un-interactive mode)
sudo unminimize < <(echo 'y'; sleep 1; echo 'y')

# ensure $USER is defined
if [ -z "$USER" ]; then
  USER="$(id -un)"
fi

# link workspace for convenience
ln -Tfs "/workspaces/obsidian" ~/obsidian

# pull in submodules
git submodule update --init --recursive

# link dotfiles
ln -Tfs "$PWD" ~/dotfiles
ln -Tfs "$PWD/git/.config/git" ~/.config/git
ln -Tfs "$PWD/vanta/.config/git/config.local" ~/.config/git/config.local
ln -Tfs "$PWD/fish/.config/fish" ~/.config/fish
ln -Tfs "$PWD/starship/.config/starship.toml" ~/.config/starship.toml
ln -Tfs "$PWD/tmux/.config/tmux" ~/.config/tmux
ln -Tfs "$PWD/extrakto/.config/extrakto" ~/.config/extrakto
ln -Tfs "$PWD/term/.config/bat" ~/.config/bat
ln -Tfs "$PWD/term/.config/ripgreprc" ~/.config/ripgreprc
ln -Tfs "$PWD/term/.lesskey" ~/.lesskey
ln -Tfs "$PWD/term/.terminfo" ~/.terminfo
ln -Tfs "$PWD/nvim/.config/nvim" ~/.config/nvim

# install build dependencies
# - cmake required by fish
# - libevent/ncurses required by tmux
sudo apt install -y cmake libevent-dev libncurses-dev

# make temporary build directory
TMP_DIR="$HOME/tmp"
mkdir -p "$TMP_DIR"

# install fd
cd "$TMP_DIR"
FD_VERSION="8.7.1"
FD_DEB="fd-musl_${FD_VERSION}_amd64.deb"
wget "https://github.com/sharkdp/fd/releases/download/v$FD_VERSION/$FD_DEB" -O "$FD_DEB"
sudo dpkg -i "$FD_DEB"

# install rg
cd "$TMP_DIR"
RG_VERSION="13.0.0"
RG_DEB="ripgrep_${RG_VERSION}_amd64.deb"
wget "https://github.com/BurntSushi/ripgrep/releases/download/$RG_VERSION/$RG_DEB" -O "$RG_DEB"
sudo dpkg -i "$RG_DEB"

# install bat
cd "$TMP_DIR"
BAT_VERSION="0.24.0"
BAT_DEB="bat-musl_${BAT_VERSION}_amd64.deb"
wget "https://github.com/sharkdp/bat/releases/download/v$BAT_VERSION/$BAT_DEB" -O "$BAT_DEB"
sudo dpkg -i "$BAT_DEB"

# install fish
cd "$TMP_DIR"
FISH_VERSION="3.6.1"
FISH_DIR="fish-$FISH_VERSION"
FISH_TAR="$FISH_DIR.tar.xz"
wget "https://github.com/fish-shell/fish-shell/releases/download/$FISH_VERSION/$FISH_TAR" -O "$FISH_TAR"
tar xf "$FISH_TAR"
cd "$FISH_DIR"
cmake -D CMAKE_INSTALL_PREFIX=/usr .
make
sudo make install

# set up fish environment
fish <<EOF
set -Ux COLORTERM "truecolor"
set -Ux BROWSER "w3m"
set -Ux EDITOR "nvim"
set -Ux VISUAL "nvim"
set -Ux PAGER "bat"
set -Ux MANPAGER "sh -c 'col -bx | bat -l man'"
set -Ux LS_COLORS "rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=01;34:st=37;44:ex=01;32"
set -Ux NODE_ENV "development"

set -U fish_key_bindings fish_hybrid_key_bindings
set -U fish_greeting ""
fish_add_path ~/.local/bin
EOF

sudo chsh -s /usr/bin/fish "$USER"

# install tmux
cd "$TMP_DIR"
TMUX_VERSION="3.3a"
TMUX_DIR="tmux-$TMUX_VERSION"
TMUX_TAR="$TMUX_DIR.tar.gz"
wget "https://github.com/tmux/tmux/releases/download/$TMUX_VERSION/$TMUX_TAR" -O "$TMUX_TAR"
tar xzf "$TMUX_TAR"
cd "$TMUX_DIR"
./configure
make
sudo make install

# install tmux plugins
tmux new ~/.config/tmux/plugins/tpm/bindings/install_plugins

# install starship
cd "$TMP_DIR"
wget "https://starship.rs/install.sh" -O install-starship.sh
chmod +x install-starship.sh
./install-starship.sh -y -b ~/.local/bin

# install neovim (nightly build)
cd "$TMP_DIR"
NVIM_DIR="nvim-linux64"
NVIM_TAR="$NVIM_DIR.tar.gz"
wget "https://github.com/neovim/neovim/releases/download/nightly/$NVIM_TAR" -O "$NVIM_TAR"
tar xzf "$NVIM_TAR"
cd "$NVIM_DIR"
sudo cp -r bin lib share /usr
sudo cp -r man /usr/share

# do an initial run of nvim to bootstrap stuff
nvim +qa
